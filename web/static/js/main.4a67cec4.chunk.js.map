{"version":3,"sources":["components/static/nav/nav_static.js","components/static/header/header_static.js","components/views/home/home_view.js","components/reusable/multi-post/multi-post-search/multi-post-search__comp.js","components/reusable/multi-post/post/post_comp.js","components/reusable/multi-post/multi-post_comp.js","components/views/blog/blog_view.js","services/global_service.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","NavLink","to","Component","Header","nav_static","Home","header_static","MultiPostSearch","props","Post","MultiPost","multi_post_search_comp","post_comp","Global","url","headers","Content-Type","Accept","length","arguments","undefined","id","possibleCharacters","i","charAt","Math","floor","random","input","e","document","innerHTML","childNodes","nodeValue","data","method","body","JSON","stringify","controller","action","payload","arr1","arr2","concat","word","possible","wordLength","sentence","sentenceLength","this","makeWord","para","makeSentence","Blog","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createArticle","bind","assertThisInitialized","articleTitle","articleSummary","articleBody","makeParagraph","articleStatus","userId","req","createRequestBody","fetch","then","res","json","console","log","className","multi_post_comp","class","type","onClick","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a67cec4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n  render() {\r\n    return(\r\n      <nav>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n        <NavLink to=\"/blog\">Blog</NavLink>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\n\r\nimport Nav from '../nav/nav_static';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return(\r\n      <header>\r\n        <Nav />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport Header from '../../static/header/header_static';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return(\r\n    <div>\r\n      <Header />\r\n      Home\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nconst MultiPostSearch = (props) => {\r\n  return( <div></div>);\r\n}\r\n\r\nexport default MultiPostSearch;","import React, { Component } from 'react';\r\n\r\nconst Post = (props) => {\r\n  return( <div></div>);\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react';\r\n\r\nimport MultiPostSearch from './multi-post-search/multi-post-search__comp';\r\nimport Post from './post/post_comp';\r\n\r\nclass MultiPost extends Component {\r\n  render(){\r\n    return(\r\n      <div>\r\n        <MultiPostSearch />\r\n        <div>\r\n          <Post />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MultiPost;","import React, { Component } from 'react';\r\n\r\nimport MultiPost from '../../reusable/multi-post/multi-post_comp';\r\nimport Globals from '../../../services/global_service';\r\n\r\nconst Global = new Globals();\r\n\r\nclass Blog extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.createArticle = this.createArticle.bind(this);\r\n  }\r\n\r\n  createArticle () {\r\n    let data = {\r\n      'articleTitle': Global.makeWord(12),\r\n      'articleSummary': Global.makeSentence(20),\r\n      'articleBody': Global.makeParagraph(6),\r\n      'articleStatus': 'published',\r\n      'userId': 1\r\n    }\r\n    let req = Global.createRequestBody('article', 'createArticle', data);\r\n    fetch(Global.url, req)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      console.log(res);\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return(\r\n      <div className=\"view--blog grid--limited-padded \">\r\n        <section className=\"view--blog__seciton col--12 col--sml--8 bg-blue\">\r\n          <MultiPost />\r\n        </section>\r\n        <aside className=\"col--12 col--sml--4 bg-yellow\">\r\n          <h1>Blog</h1>\r\n          <form>\r\n            <fieldset class=\"form__field\">\r\n              <button type=\"button\" onClick={this.createArticle} class=\"btn mid primary\">Create Article</button>\r\n            </fieldset>\r\n          </form>\r\n        </aside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;","//================================\r\n// Globals Class\r\n//================================\r\n\r\nclass Globals {\r\n\r\n  url= 'https://nameless-basin-41865.herokuapp.com/server.php';\r\n\r\n  headers= {\r\n    \"Content-Type\": \"application/json\",\r\n    \"Accept\": \"application/json\",\r\n  };\r\n\r\n  createRandomKey(length = 7) {\r\n    let id = \"\";\r\n    let possibleCharacters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (let i = 0; i < length; i++) {\r\n      id += possibleCharacters.charAt(Math.floor(Math.random() * possibleCharacters.length));\r\n    }\r\n\r\n    return id;\r\n  }\r\n\r\n  htmlDecode(input){\r\n    var e = document.createElement('div');\r\n    e.innerHTML = input;\r\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\r\n  }\r\n\r\n  createRequest(data) {\r\n\r\n    let req = {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data),\r\n    }\r\n\r\n    return req;\r\n  }\r\n\r\n  createBody(controller, action, payload) {\r\n    let body = {\r\n      controller: controller,\r\n      action: action,\r\n      payload: payload,\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  createRequestBody(controller, action, payload) {\r\n    let body = {\r\n      controller: controller,\r\n      action: action,\r\n      payload: payload,\r\n    }\r\n    let req = {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(body),\r\n    }\r\n\r\n    return req;\r\n  }\r\n\r\n  concatArray(arr1, arr2) {\r\n    return arr1.concat(arr2);\r\n  }\r\n\r\n  makeWord (length) {\r\n    var word = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\r\n    let wordLength = Math.floor(Math.random() * length) + 1;\r\n  \r\n    for (let i = 0; i < wordLength; i++) {\r\n      word += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n      \r\n  \r\n    return word;\r\n  }\r\n  \r\n  makeSentence(length) {\r\n    let sentence = \"\";\r\n    let sentenceLength = Math.floor(Math.random() * length) + 4;\r\n  \r\n    for( let i = 0; i < sentenceLength; i++) {\r\n      sentence += \" \" + this.makeWord(12);\r\n    }\r\n  \r\n    sentence += \".\";\r\n  \r\n    return sentence;\r\n  }\r\n  \r\n    makeParagraph(length) {\r\n    let para = \" \";\r\n    \r\n    for( let i = 0; i < length; i++) {\r\n      para += \" \" + this.makeSentence(12);\r\n    }\r\n  \r\n    return para;\r\n  }\r\n}\r\n\r\n//Export Statement\r\nexport default Globals;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport Home from './components/views/home/home_view';\nimport Blog from './components/views/blog/blog_view';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"app__container\">\n          <Switch>\n\n            <Route  \n              exact={true}\n              path=\"/\"\n              component={Home} />\n\n            <Route  \n              exact={true}\n              path=\"/blog\"\n              component={Blog} />\n\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}